#ifndef _MCP23S17_H_
#define _MCP23S17_H_

/*****************************************************************************/
/***************************** Include Files *********************************/
/*****************************************************************************/
#include "xil_types.h"
#include "xparameters.h"

// MCP23S17 SPI Address
//#define SPI_BASEADDR 					XPAR_AXI_SPI_0_BASEADDR
#define MCP23S17_SPI_ADDR      			0x40

// Registers Address
#define    IODIRA    (0x00)      // MCP23x17 I/O Direction Register
#define    IODIRB    (0x01)      // 1 = Input (default), 0 = Output
#define GPIOA_ADR 0x12  // port A
#define GPIOB_ADR 0x13  // port B

// I/O config
#define BANK_OFF 0x00  // addressing mode
#define BANK_ON 0x80
#define HAEN_ON 0x08  // hardware addressing (A2,A1,A0) all GND IF ON
#define HAEN_OFF 0x00

// MCP GPIO Port Selection Defines
#define	GPB0	0x401901
#define	GPB1	0x401902
#define	GPB2	0x401904
#define	GPB3	0x401908
#define	GPB4	0x401910
#define	GPB5	0x401920
#define	GPB6	0x401940
#define	GPB7	0x401980
#define	GPA0	0x400901
#define	GPA1	0x400902
#define	GPA2	0x400904
#define	GPA3	0x400908
#define	GPA4	0x400910
#define	GPA5	0x400920
#define	GPA6	0x400940
#define	GPA7	0x400980

// User DEFINES
#define BUFFER_SIZE 3
#define gpioSelect 0x0000FF // mask for GPIO port selection

/**
* sorts input array on GPIO adresses and sends SPI port selects to both registers(GPA&GPB).
 */
void portSelection(char portSelect[3]);

/*
* Start SPI module with correct register values.
 */
void SPIStart(XSpi* spiPTR, u16 spiID);

#endif	// _MCP23S17_H_
